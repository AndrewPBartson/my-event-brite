version: '3.4'

networks:
  frontend:
  backend:


services:
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y 
      SA_PASSWORD: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "5040:1433"
    container_name: MSSQLContainer   
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "5041:1433"
    container_name: EventsTokenSqlServer
    networks:
      - backend

  event:
    image: eventmanagement/eventapi
    build:
      context: .\EventAPI
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalogDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      ExternalCatalogUrl: http://localhost:7000
      TZ: "America/Los_Angeles"
    ports:
      - "7000:80"
    container_name: EventCatalogAPIContainer  
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: events/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://event
      IdentityUrl: http://192.168.1.13:7801
      CallBackUrl: http://localhost:7500
      CartUrl: http://cart
      #OrderUrl: http://order
      #StripePublicKey: pk_test_jZlpubvlPmcV6QJPReImelQy
      #StripePrivateKey: sk_test_bSHT9qxwjpyCOP0qdAvHLfAA
      TZ: "America/Los_Angeles"
    ports:
      - "7500:80"
    container_name: WebMVCContainer
    networks:
      - frontend
    depends_on:
      - event
      - tokenserver
      - cart
      #- order

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:7500
      DatabaseServer: tokensqlserver
      DatabaseName: TokenServiceDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "7801:80"
    container_name: TokenServiceAPI
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver

  cart.data:
    image: redis
    ports:
      - "7030:6379"
    container_name: CartData
    networks:
      - backend

  cart:
    image: events/cartapi
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: cart.data
      IdentityUrl: http://192.168.1.13:7801
    ports:
      - "7012:80"
    container_name: EventsCartAPI
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - cart.data
  #order:
  #  build:
  #    context: .\OrderAPI
  #    dockerfile: Dockerfile
  #  image: events/orderapi
  #  logging:
  #    driver: "json-file"
  #    options:
  #      max-size: "200k"
  #      max-file: "10"
  #  environment:
  #    ASPNETCORE_ENVIRONMENT: Development
  #    IdentityUrl: http://192.168.1.13:7800
  #    DatabaseServer: mssqlserver
  #    DatabaseName: OrdersDb
  #    DatabaseUser: sa
  #    DatabasePassword: ProductApi(!)
  #  ports:
  #    - "7015:80"
  #  container_name: orderapi
  #  networks:
  #    - backend
  #    - frontend
  #  depends_on:
  #    - mssqlserver
  #    - tokenserver
